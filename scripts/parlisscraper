#! /usr/bin/env python
# -*- coding: utf-8 -*-
'''
Commandline tool for scraping the city council of Frankfurt / Main's
online proposition system.

Source is available on https://github.com/frankfurt-gestalten/Parlis-Scraper

:author: Niko Wenselowski <der@nik0.de>
:license: GNU Affero General Public License version 3
'''

import logging
from optparse import OptionParser

from parlisscraper.workflow import startWorkflow

LOGGER = logging.getLogger('parlisscraper')


if __name__ == '__main__':
    optionParser = OptionParser()
    optionParser.add_option('-s', '--startYear', dest='startYear', type=int,
                            default=1992,
                            help='The year from which one the scraping starts')
    optionParser.add_option('-e', '--endYear', dest='endYear', type=int,
                            default=None,
                            help='The year to which the scraping will work')
    optionParser.add_option('-i', '--onlyIndexes', dest='onlyIndexes',
                            default=False, action="store_true",
                            help='Only create index files.')
    optionParser.add_option('-d', '--onlyScraping', dest='onlyScraping',
                            default=False, action="store_true",
                            help='Only scrape webpages.')
    optionParser.add_option('--debug', action="store_true", default=False,
                            help="Enable debug output.")
    optionParser.add_option('--verbose', action="store_true", default=False,
                            help="Verbose output.")
    optionParser.add_option('--export-limit', dest='exportLimit', type=int,
                            default=0,
                            help='Limit the number of entries in the export')

    (options, unparseableArguments) = optionParser.parse_args()

    if options.debug:
        logging.basicConfig(level=logging.DEBUG)
    elif options.verbose:
        logging.basicConfig(level=logging.INFO)
    else:
        logging.basicConfig(level=logging.ERROR)

    startWorkflow(options.startYear, options.endYear,
                  options.onlyIndexes, options.onlyScraping,
                  options.exportLimit)
